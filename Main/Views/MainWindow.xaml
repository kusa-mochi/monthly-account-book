<Window x:Name="MainWindow1" x:Class="Main.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:uc="clr-namespace:Main.UserControls.Views"
        xmlns:v="clr-namespace:Main.Views"
        xmlns:vm="clr-namespace:Main.ViewModels"
        Title="MainWindow" Height="350" Width="525">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Menu Margin="0">
            <MenuItem Header="ファイル(_F)">
                <MenuItem Header="設定"/>
                <Separator/>
                <MenuItem Header="月毎のデータ"/>
                <MenuItem Header="家計の推移"/>
                <Separator/>
                <MenuItem Header="終了(_X)"/>
            </MenuItem>
        </Menu>
        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Grid.Row="1">
            <uc:YearMonthPicker Year="{Binding Year, Mode=TwoWay, FallbackValue=2016}" Month="{Binding Month, Mode=TwoWay, FallbackValue=12}" Background="White"/>
        </StackPanel>
        <TabControl Grid.Row="2" FontSize="16">
            <TabItem Header="支出">
                <uc:AccountBookListBox PaymentsList="{Binding SpendingList}"/>
            </TabItem>
            <TabItem Header="収入">
                <uc:AccountBookListBox PaymentsList="{Binding IncomeList}"/>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
